


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             problem1,CODE,READONLY
    2 00000000                 ENTRY
    3 00000000         start
    4 00000000 E59F00F0        LDR              r0, =array1 ; address load
    5 00000004 E59F10F0        LDR              r1, =array2 ; address load
    6 00000008         
    7 00000008 E5902000        LDR              r2,[r0]     ; load 0x3FC00000
    8 0000000C E5913000        LDR              r3,[r1]     ; load 0x40500000
    9 00000010 E59FC0DC        LDR              r12,tempaddr
   10 00000014         
   11 00000014 E1A04FA2        MOV              r4,r2,LSR #31 
                                                            ; to store signbit
   12 00000018 E1A05FA3        MOV              r5,r3,LSR #31
   13 0000001C         
   14 0000001C E1A06BA2        MOV              r6,r2,LSR #23 
                                                            ; to store exponent
                                                            
   15 00000020 E1A07BA3        MOV              r7,r3,LSR #23
   16 00000024 E1A06C06        MOV              r6,r6,LSL #24
   17 00000028 E1A07C07        MOV              r7,r7,LSL #24
   18 0000002C E1A060A6        MOV              r6,r6,LSR #1
   19 00000030 E1A070A7        MOV              r7,r7,LSR #1 ; to only store ex
                                                            ponent not signbit
   20 00000034         
   21 00000034 E1A08482        MOV              r8,r2,LSL #9 
                                                            ; to store mantissa
                                                            
   22 00000038 E1A09483        MOV              r9,r3,LSL #9
   23 0000003C E1A080A8        MOV              r8,r8,LSR #1
   24 00000040 E1A090A9        MOV              r9,r9,LSR #1 ; to add 1
   25 00000044         
   26 00000044 E2888102        ADD              r8,r8,#0x80000000 ; add 1
   27 00000048 E2899102        ADD              r9,r9,#0x80000000
   28 0000004C         
   29 0000004C E1560007        CMP              r6,r7       ; exponent compare
   30 00000050         
   31 00000050 C046A007        SUBGT            r10,r6,r7
   32 00000054 B047A006        SUBLT            r10,r7,r6
   33 00000058 03A0A000        MOVEQ            r10,#0
   34 0000005C         
   35 0000005C E1A0ABAA        MOV              r10,r10, LSR #23 
                                                            ; r10 is shiftnum
   36 00000060         
   37 00000060 C1A09A39        MOVGT            r9,r9,LSR r10 
                                                            ; exponent matching
                                                            
   38 00000064 B1A08A38        MOVLT            r8,r8,LSR r10
   39 00000068         
   40 00000068 B1A06007        MOVLT            r6,r7       ; large exponent is
                                                             standard
   41 0000006C         
   42 0000006C E1540005        CMP              r4,r5
   43 00000070         
   44 00000070 0A000000        BEQ              equal       ;sign bit equal
   45 00000074 1A000005        BNE              notequal    ;sign bit notequal
   46 00000078         
   47 00000078         equal
   48 00000078 E098B009        ADDS             r11,r8,r9
   49 0000007C 22866502        ADDCS            r6,r6,#0x00800000 ; if carry is



ARM Macro Assembler    Page 2 


                                                             1, right shift nee
                                                            d
   50 00000080 21A0B0AB        MOVCS            r11,r11,LSR #1
   51 00000084         
   52 00000084 E1A0B08B        MOV              r11,r11,LSL #1 ; mantissa is 23
                                                            bit 24th bit should
                                                             be cleared
   53 00000088 E1A0B4AB        MOV              r11,r11,LSR #9 ; bit position a
                                                            djustment
   54 0000008C         
   55 0000008C EA000011        B                endline
   56 00000090         
   57 00000090         notequal
   58 00000090 E1580009        CMP              r8,r9
   59 00000094         
   60 00000094 0A00000C        BEQ              equalvalue
   61 00000098         
   62 00000098 C048B009        SUBGT            r11,r8,r9
   63 0000009C B049B008        SUBLT            r11,r9,r8
   64 000000A0         
   65 000000A0 B1A04005        MOVLT            r4,r5       ; large mantissa' a
                                                            bsolute value is st
                                                            andard
   66 000000A4 EAFFFFFF        B                normalization
   67 000000A8         
   68 000000A8         normalization                        ; bit position alig
                                                            n
   69 000000A8 E35B0401        CMP              r11,#0x01000000 ; mantissa shif
                                                            t right
   70 000000AC         
   71 000000AC 22866502        ADDCS            r6,r6,#0x00800000
   72 000000B0 21A0B0AB        MOVCS            r11,r11,LSR #1
   73 000000B4 2AFFFFFB        BCS              normalization
   74 000000B8         
   75 000000B8 E35B0502        CMP              r11,#0x00800000 ;mantissa shift
                                                             left
   76 000000BC         
   77 000000BC 92466502        SUBLS            r6,r6,#0x00800000
   78 000000C0 91A0B08B        MOVLS            r11,r11,LSL #1
   79 000000C4 9AFFFFF7        BLS              normalization
   80 000000C8 EA000002        B                endline
   81 000000CC         
   82 000000CC         equalvalue
   83 000000CC E3A0B000        MOV              r11,#0
   84 000000D0 E58CB000        STR              r11,[r12]
   85 000000D4 E1A0F00E        MOV              pc,lr
   86 000000D8         
   87 000000D8         endline
   88 000000D8 E1A04F84        MOV              r4,r4,LSL #31
   89 000000DC E08BB004        ADD              r11,r11,r4
   90 000000E0 E08BB006        ADD              r11,r11,r6
   91 000000E4         
   92 000000E4 E58CB000        STR              r11, [r12]
   93 000000E8         
   94 000000E8 E1A0F00E        MOV              pc,lr
   95 000000EC 40C00000 
                       array1  &                0x40C00000  ; 00111111 11000000
                                                             00000000 00000000 
                                                            : 1.1 * 2^0



ARM Macro Assembler    Page 3 


   96 000000F0 40800000 
                       array2  &                0x40800000  ; 01000000 01010000
                                                             00000000 00000000 
                                                            : 1.101 * 2^1
   97 000000F4 00040000 
                       tempaddr
                               &                &40000
   98 000000F8         
   99 000000F8                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM9E --apcs=interwork 
--depend=.\objects\problem1.d -o.\objects\problem1.o -IC:\Users\dlrkd\homework\
kanghyun\onedrive\2-2\keli\ARM\RV31\INC -IC:\Users\dlrkd\homework\kanghyun\oned
rive\2-2\keli\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVIS
ION_VERSION SETA 529" --list=.\listings\problem1.lst problem1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

array1 000000EC

Symbol: array1
   Definitions
      At line 95 in file problem1.s
   Uses
      At line 4 in file problem1.s
Comment: array1 used once
array2 000000F0

Symbol: array2
   Definitions
      At line 96 in file problem1.s
   Uses
      At line 5 in file problem1.s
Comment: array2 used once
endline 000000D8

Symbol: endline
   Definitions
      At line 87 in file problem1.s
   Uses
      At line 55 in file problem1.s
      At line 80 in file problem1.s

equal 00000078

Symbol: equal
   Definitions
      At line 47 in file problem1.s
   Uses
      At line 44 in file problem1.s
Comment: equal used once
equalvalue 000000CC

Symbol: equalvalue
   Definitions
      At line 82 in file problem1.s
   Uses
      At line 60 in file problem1.s
Comment: equalvalue used once
normalization 000000A8

Symbol: normalization
   Definitions
      At line 68 in file problem1.s
   Uses
      At line 66 in file problem1.s
      At line 73 in file problem1.s
      At line 79 in file problem1.s

notequal 00000090

Symbol: notequal
   Definitions
      At line 57 in file problem1.s
   Uses
      At line 45 in file problem1.s
Comment: notequal used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

problem1 00000000

Symbol: problem1
   Definitions
      At line 1 in file problem1.s
   Uses
      None
Comment: problem1 unused
start 00000000

Symbol: start
   Definitions
      At line 3 in file problem1.s
   Uses
      None
Comment: start unused
tempaddr 000000F4

Symbol: tempaddr
   Definitions
      At line 97 in file problem1.s
   Uses
      At line 9 in file problem1.s
Comment: tempaddr used once
10 symbols
344 symbols in table
